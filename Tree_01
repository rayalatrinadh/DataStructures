package com.theaInterviewTrack;

class Node{
    int data;
    Node left;
    Node right;

    Node(){};

    Node(int data){
        this.data = data;
    }

    Node(int data,Node left, Node right){
        this.data = data;
        this.left = left;
        this.right = right;
    }
}


class BinaryTreeFromataion {

    Node root;

    public void addNode(int data) {
        Node newNode = new Node(data);
        if (root == null)
            root = newNode;
        else {
            Node focusNode = root;
            Node parent;
            while (true) {
                parent = focusNode;
                if (data < focusNode.data) {
                    focusNode = focusNode.left;
                    if (focusNode == null) {
                        parent.left = newNode;
                        return;
                    }
                } else {
                    focusNode = focusNode.right;
                    if (focusNode == null) {
                        parent.right = newNode;
                        return;
                    }
                }

            }
        }
    }


    public void preOrderTraversal(Node focusNode) {
        if (focusNode != null) {
            System.out.print(focusNode.data + " ");
            preOrderTraversal(focusNode.left);
            preOrderTraversal(focusNode.right);
        }
    }

}

public class BinaryTree {


    public static void main(String[] args) {
        BinaryTreeFromataion tree = new BinaryTreeFromataion();

        tree.addNode(50);
        tree.addNode(25);
        tree.addNode(75);
        tree.addNode(12);
        tree.addNode(37);

        System.out.println("Tree Root : " + tree.root);
        System.out.println(("Tree Root Data : " +tree.root.data));

        tree.preOrderTraversal(tree.root);
    }
}
